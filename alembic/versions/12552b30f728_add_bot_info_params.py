"""Add bot info params

Revision ID: 12552b30f728
Revises: ad1583e44c52
Create Date: 2024-07-29 15:08:03.794422

"""
from typing import Sequence, Union
import sqlmodel

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '12552b30f728'
down_revision: Union[str, None] = 'ad1583e44c52'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_uptimemonitor_name', table_name='uptimemonitor')
    op.drop_index('ix_uptimemonitor_url', table_name='uptimemonitor')
    op.drop_constraint('uptimemonitorstatus_monitor_id_fkey', 'uptimemonitorstatus', type_='foreignkey')
    op.drop_constraint('alert_monitor_id_fkey', 'alert', type_='foreignkey')
    op.drop_constraint('alertstatus_alert_id_fkey', 'alertstatus', type_='foreignkey')
    op.drop_table('uptimemonitor')
    op.drop_table('alert')
    op.drop_table('alertstatus')
    op.drop_table('uptimemonitorstatus')
    # op.alter_column('apilog', 'user_project_id',
    #            existing_type=sa.UUID(),
    #            nullable=True)
    op.add_column('botinfo', sa.Column('pattern', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('botinfo', 'bot_type',
               existing_type=postgresql.ENUM('search_engine', 'social_media', 'ai', 'seo', 'chatbot', name='bottype'),
               nullable=True)
    op.drop_index('ix_userproject_name', table_name='userproject')
    op.create_index(op.f('ix_userproject_name'), 'userproject', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_userproject_name'), table_name='userproject')
    op.create_index('ix_userproject_name', 'userproject', ['name'], unique=True)
    op.alter_column('botinfo', 'bot_type',
               existing_type=postgresql.ENUM('search_engine', 'social_media', 'ai', 'seo', 'chatbot', name='bottype'),
               nullable=False)
    op.drop_column('botinfo', 'pattern')
    op.alter_column('apilog', 'user_project_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.create_table('uptimemonitorstatus',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('monitor_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('up', 'down', 'unknown', name='monitorstatus'), autoincrement=False, nullable=False),
    sa.Column('response_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('response_code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('response_code_text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['monitor_id'], ['uptimemonitor.id'], name='uptimemonitorstatus_monitor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='uptimemonitorstatus_pkey')
    )
    op.create_table('alertstatus',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('alert_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('up', 'down', 'unknown', name='monitorstatus'), autoincrement=False, nullable=False),
    sa.Column('response_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('response_code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('response_code_text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['alert_id'], ['alert.id'], name='alertstatus_alert_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='alertstatus_pkey')
    )
    op.create_table('alert',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('monitor_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('email', 'sms', 'webhook', name='alerttype'), autoincrement=False, nullable=False),
    sa.Column('threshold', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['monitor_id'], ['uptimemonitor.id'], name='alert_monitor_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='alert_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='alert_pkey')
    )
    op.create_table('uptimemonitor',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('http', 'https', 'ping', name='monitortype'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('up', 'down', 'unknown', name='monitorstatus'), autoincrement=False, nullable=False),
    sa.Column('check_interval', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('payload', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('expected_response', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('public_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['userproject.id'], name='uptimemonitor_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='uptimemonitor_pkey')
    )
    op.create_index('ix_uptimemonitor_url', 'uptimemonitor', ['url'], unique=False)
    op.create_index('ix_uptimemonitor_name', 'uptimemonitor', ['name'], unique=False)
    # ### end Alembic commands ###
