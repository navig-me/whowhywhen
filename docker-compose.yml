version: '3.8'

services:
  dash:
    image: backend_dash
    build:
      context: .
      dockerfile: Dockerfile.dash
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dash.rule=Host(`dashapi.whowhywhen.com`)"
      - "traefik.http.services.dash.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.real-ip.headers.customrequestheaders.X-Forwarded-For=X-Real-IP,X-Forwarded-For,X-Forwarded-Proto,X-Forwarded-Host,X-Forwarded-Port"
      - "traefik.http.routers.dash.middlewares=real-ip"

  api:
    image: backend_api
    build:
      context: .
      dockerfile: Dockerfile.api
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.whowhywhen.com`)"
      - "traefik.http.services.api.loadbalancer.server.port=8001"
      - "traefik.http.middlewares.real-ip.headers.customrequestheaders.X-Forwarded-For=X-Real-IP,X-Forwarded-For,X-Forwarded-Proto,X-Forwarded-Host,X-Forwarded-Port"
      - "traefik.http.routers.api.middlewares=real-ip"

  svelte:
    image: svelte_image
    build:
      context: .
      dockerfile: Dockerfile.svelte
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`whowhywhen.com`, `www.whowhywhen.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.middlewares.real-ip.headers.customrequestheaders.X-Forwarded-For=X-Real-IP,X-Forwarded-For,X-Forwarded-Proto,X-Forwarded-Host,X-Forwarded-Port"
      - "traefik.http.routers.frontend.middlewares=real-ip"

  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=youremail@example.com"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - app-network

networks:
  app-network:

volumes:
  letsencrypt:
